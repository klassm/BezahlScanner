apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'net.researchgate.release'

buildscript {
    ext.kotlin_version = '1.2.71'

    repositories {
        jcenter()
        google()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.google.gms:google-services:4.1.0'
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'net.researchgate:gradle-release:2.7.0'
    }
}

def getAppVersionCode() {
    return Integer.valueOf(version.replaceAll("\\.", "").replace("-SNAPSHOT", ""))
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"


    lintOptions {
        abortOnError false
    }

    defaultConfig {
        multiDexEnabled true
        applicationId "li.klass.bezahl.scanner"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode getAppVersionCode()
        versionName version
    }

    signingConfigs {
        release {
            storeFile file("release.jks")
            keyAlias "BezahlScanner"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-production.txt'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'APK LICENSE.txt'
        exclude 'LICENSE.txt'
    }
}

ext {
    supportLibVersion = '28.0.0'
    ankoVersion = '0.10.1'
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'com.tngtech.java:junit-dataprovider:1.12.0'
    testCompile 'org.assertj:assertj-core:3.10.0'
    testCompile 'org.mockito:mockito-core:2.21.0'
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"

    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "com.google.zxing:android-integration:3.2.1"
    compile("com.google.android.gms:play-services-auth:16.0.0")
    compile("com.google.android.gms:play-services-drive:15.0.1")
    compile "org.apache.commons:commons-csv:1.2"
    compile "joda-time:joda-time:2.9.9"
    compile "org.apache.commons:commons-lang3:3.7"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "org.jetbrains.anko:anko-sdk25:$ankoVersion"
    compile "org.jetbrains.anko:anko-appcompat-v7:$ankoVersion"
    compile "org.jetbrains.anko:anko-sdk25-coroutines:$ankoVersion"
    compile "org.jetbrains.anko:anko-appcompat-v7-coroutines:$ankoVersion"
    compile "org.jetbrains.anko:anko-coroutines:$ankoVersion"
    compile 'com.android.support:multidex:1.0.3'
}

kotlin {
    experimental { coroutines "enable" }
}

release {
    buildTasks = ['build']
}

if (project.hasProperty('bezahlScannerReleaseStorePassword')) {
    android.signingConfigs.release.storePassword = bezahlScannerReleaseStorePassword
}
if (project.hasProperty('bezahlScannerReleaseAliasPassword')) {
    android.signingConfigs.release.keyPassword = bezahlScannerReleaseAliasPassword
}

apply plugin: 'com.google.gms.google-services'
